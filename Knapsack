import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the unboundedKnapsack function below.
    static int unboundedKnapsack(int k, int[] arr) {
       int[][] dp=new int[arr.length+1][k+1];

       for(int i=0;i<arr.length+1;i++){
           for(int j=0;j<k+1;j++){
               if(i==0)
                dp[i][j]=0;
               if(j==0)
                dp[i][j]=1;
           }
       }
        for(int i=1;i<arr.length+1;i++){
           for(int j=1;j<k+1;j++){
               if(arr[i-1]<=j){
                   dp[i][j]=Math.max(dp[i][j-arr[i-1]],dp[i-1][j]);
               }
               else
               dp[i][j]=dp[i-1][j];
           }
           }

           for(int j=k;j>=0;j--){
               if(dp[arr.length][j]==1){
                   return j;
               }
           }
           return 0;

    }
    

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");
       
       for(int p=0;p<t;p++){
        String[] nk = scanner.nextLine().split(" ");

        int n = Integer.parseInt(nk[0]);

        int k = Integer.parseInt(nk[1]);

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int result = unboundedKnapsack(k, arr);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();
       }
        bufferedWriter.close();
       
        scanner.close();
    
    }
}
