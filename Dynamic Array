import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    public static List<Integer> dynamicArray(int n, List<List<Integer>> queries) {
        int lastAnswer=0,k=0,co=0;
        ArrayList<ArrayList<Integer>> seq=new ArrayList<ArrayList<Integer>>();
        
        List<Integer> re=new ArrayList<Integer>();
        for(int i=0;i<n;i++)
        seq.add(i,new ArrayList<Integer>());
        for(int i=0;i<queries.size();i++){
            if(queries.get(i).get(0)==1){
                int index=((queries.get(i).get(1))^lastAnswer)%n;
               
                seq.get(index).add(queries.get(i).get(2));
            }
            else{
                 int index=((queries.get(i).get(1))^lastAnswer)%n;
                 lastAnswer=seq.get(index).get(queries.get(i).get(2)%(seq.get(index).size()));
                 re.add(k,lastAnswer);
                 k++;
            }
        }
        return re;
    

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int n = Integer.parseInt(firstMultipleInput[0]);

        int q = Integer.parseInt(firstMultipleInput[1]);

        List<List<Integer>> queries = new ArrayList<>();

        for (int i = 0; i < q; i++) {
            String[] queriesRowTempItems = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

            List<Integer> queriesRowItems = new ArrayList<>();

            for (int j = 0; j < 3; j++) {
                int queriesItem = Integer.parseInt(queriesRowTempItems[j]);
                queriesRowItems.add(queriesItem);
            }

            queries.add(queriesRowItems);
        }

        List<Integer> result = Result.dynamicArray(n, queries);

        for (int i = 0; i < result.size(); i++) {
            bufferedWriter.write(String.valueOf(result.get(i)));

            if (i != result.size() - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
