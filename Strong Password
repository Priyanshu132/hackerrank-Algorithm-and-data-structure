import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

  
    static int minimumNumber(int n, String password) {
         int temp=0,count=0,temp1=0,temp2=0,temp3=0;
        
             for(int i=0;i<n;i++){
                 if(password.charAt(i)<='9' && password.charAt(i)>='0' )
                  {
                      temp=1;
                      
                  }
                  if((int)password.charAt(i)>=65 && (int)password.charAt(i)<=90){
                      temp1=1;
                  }
                  if((int)password.charAt(i)>=97 && (int)password.charAt(i)<=122){
                      temp2=1;
                  }
                  if((int)password.charAt(i)==33 || (int)password.charAt(i)==45 ||(int)password.charAt(i)==64 || (int)password.charAt(i)==94){
                      temp3=1;
                  }
                  if((int)password.charAt(i)>=40 && (int)password.charAt(i)<=43){
                      temp3=1;
                  }
                  if((int)password.charAt(i)>=35 && (int)password.charAt(i)<=38){
                      temp3=1;
                  }
             }
             if(temp==0)
             count++;
             if(temp1==0)
             count++;
             if(temp3==0)
             count++;
             if(temp2==0)
             count++;
         
         if(n+count>=6)
         return count;
         else{
             return (count+6-n-count);
         }

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        String password = scanner.nextLine();

        int answer = minimumNumber(n, password);

        bufferedWriter.write(String.valueOf(answer));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
